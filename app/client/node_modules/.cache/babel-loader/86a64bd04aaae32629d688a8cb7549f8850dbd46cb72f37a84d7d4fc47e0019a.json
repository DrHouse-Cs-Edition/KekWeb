{"ast":null,"code":"var _jsxFileName = \"F:\\\\Uni_programmazione\\\\KekWeb\\\\app\\\\client\\\\src\\\\pages\\\\Pomodoro.jsx\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport Navbar from '../components/Navbar.jsx';\nimport { TTform, CyclesForm } from \"../components/pomodoroComponents/FormSelector.jsx\";\nimport { SimpleTimer } from \"../components/pomodoroComponents/Timer.jsx\";\n\n//images section\nimport desk from \"./images/desk.png\";\nimport clock from \"./images/clock2.png\";\nimport \"./pomodoro.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Pomodoro() {\n  _s();\n  console.log(\"render check Pomodoro\");\n\n  //const [aniState, updateAniState] = useState(0);\n  let [cycles, updateCycles] = useState(0); //the number of cycles is updated AFTER said cycle is completed\n  let [breakTime, updateBreakTime] = useState(0);\n  let [studyTime, updateStudyTime] = useState(0);\n  let [timerCode, setTimerCode] = useState(1); //0 = study, 1 = break UNLESS cycles=0\n\n  //function used to recieve data from the FormSelector component regarding timer data\n\n  let timerComponents = {\n    1: /*#__PURE__*/_jsxDEV(SimpleTimer, {\n      StudyTime: studyTime,\n      BreakTime: breakTime,\n      Cycles: cycles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this),\n    //timer that runs during the study cycle\n    // 1 : <SimpleTimer durationA={ studyTime } durationB={ breakTime } callbackFunction={timerCycleEnd}></SimpleTimer>,\n    0: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"00:00\"\n    }, void 0, false)\n  };\n  //function to retrieve Time data from child components. \n\n  //*function that changes the timer component based on if cycles ar running AND THEN what cycle just ended\n  //*Must be used for a Hard reset (pressing the rest button). Soft resets (end of cycles) should be automatic\n  //*given that cycles = 0 and, given that we end on a break, the next switch will be to a Study.\n  const hardResetTimer = () => {\n    //TODO PLACEHOLDER\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [timerComponents[timerCode], /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"paperDestroyer3000\",\n      style: {\n        display: \"block\"\n      },\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"deskDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          id: \"desk\",\n          src: desk,\n          alt: \"desk image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: clock,\n          id: \"clockIMG\",\n          alt: \"clock image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"animationDiv\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(Pomodoro, \"w20D7Y9h3Q4KXaThoAmMQgoMg3w=\");\n_c = Pomodoro;\nexport default Pomodoro;\nvar _c;\n$RefreshReg$(_c, \"Pomodoro\");","map":{"version":3,"names":["React","Fragment","useState","useEffect","Navbar","TTform","CyclesForm","SimpleTimer","desk","clock","jsxDEV","_jsxDEV","_Fragment","Pomodoro","_s","console","log","cycles","updateCycles","breakTime","updateBreakTime","studyTime","updateStudyTime","timerCode","setTimerCode","timerComponents","StudyTime","BreakTime","Cycles","fileName","_jsxFileName","lineNumber","columnNumber","children","hardResetTimer","className","style","display","id","src","alt","_c","$RefreshReg$"],"sources":["F:/Uni_programmazione/KekWeb/app/client/src/pages/Pomodoro.jsx"],"sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\r\nimport Navbar from '../components/Navbar.jsx'\r\nimport {TTform, CyclesForm} from \"../components/pomodoroComponents/FormSelector.jsx\";\r\nimport { SimpleTimer } from \"../components/pomodoroComponents/Timer.jsx\"\r\n\r\n\r\n//images section\r\nimport desk from \"./images/desk.png\"\r\nimport clock from \"./images/clock2.png\"\r\nimport \"./pomodoro.css\"\r\n\r\nfunction Pomodoro(){\r\n  console.log(\"render check Pomodoro\");\r\n\r\n  //const [aniState, updateAniState] = useState(0);\r\n  let [cycles, updateCycles] = useState(0); //the number of cycles is updated AFTER said cycle is completed\r\n  let [breakTime, updateBreakTime] = useState(0);\r\n  let [studyTime, updateStudyTime] = useState(0);\r\n  let [timerCode, setTimerCode] = useState(1); //0 = study, 1 = break UNLESS cycles=0\r\n\r\n  //function used to recieve data from the FormSelector component regarding timer data\r\n  \r\n\r\n  let timerComponents = {\r\n    1 : <SimpleTimer StudyTime={ studyTime } BreakTime={ breakTime } Cycles={cycles}></SimpleTimer>, //timer that runs during the study cycle\r\n    // 1 : <SimpleTimer durationA={ studyTime } durationB={ breakTime } callbackFunction={timerCycleEnd}></SimpleTimer>,\r\n    0 : <>00:00</>\r\n  }\r\n  //function to retrieve Time data from child components. \r\n\r\n  \r\n\r\n\r\n  //*function that changes the timer component based on if cycles ar running AND THEN what cycle just ended\r\n  //*Must be used for a Hard reset (pressing the rest button). Soft resets (end of cycles) should be automatic\r\n  //*given that cycles = 0 and, given that we end on a break, the next switch will be to a Study.\r\n  const hardResetTimer = ()=>{\r\n    //TODO PLACEHOLDER\r\n  }\r\n\r\n  return(\r\n    <Fragment>\r\n\r\n      {timerComponents[timerCode]}\r\n\r\n      <div className=\"paperDestroyer3000\" style={{display : \"block\"}}> {/* //! currently set to not display, but will be used to display the timer in the future */ }\r\n        <div id=\"deskDiv\">\r\n          <img id=\"desk\" src={desk} alt=\"desk image\"></img>\r\n            <img src={clock} id=\"clockIMG\" alt=\"clock image\"></img>\r\n          <div id=\"animationDiv\">\r\n          </div>\r\n        </div>\r\n      </div>        \r\n      </Fragment>\r\n  );\r\n}\r\nexport default Pomodoro;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC5D,OAAOC,MAAM,MAAM,0BAA0B;AAC7C,SAAQC,MAAM,EAAEC,UAAU,QAAO,mDAAmD;AACpF,SAASC,WAAW,QAAQ,4CAA4C;;AAGxE;AACA,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAO,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAV,QAAA,IAAAW,SAAA;AAEvB,SAASC,QAAQA,CAAA,EAAE;EAAAC,EAAA;EACjBC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;;EAEpC;EACA,IAAI,CAACC,MAAM,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EAC1C,IAAI,CAACiB,SAAS,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EAC9C,IAAI,CAACmB,SAAS,EAAEC,eAAe,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;EAC9C,IAAI,CAACqB,SAAS,EAAEC,YAAY,CAAC,GAAGtB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;EAE7C;;EAGA,IAAIuB,eAAe,GAAG;IACpB,CAAC,eAAGd,OAAA,CAACJ,WAAW;MAACmB,SAAS,EAAGL,SAAW;MAACM,SAAS,EAAGR,SAAW;MAACS,MAAM,EAAEX;IAAO;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAc,CAAC;IAAE;IACjG;IACA,CAAC,eAAGrB,OAAA,CAAAC,SAAA;MAAAqB,QAAA,EAAE;IAAK,gBAAE;EACf,CAAC;EACD;;EAKA;EACA;EACA;EACA,MAAMC,cAAc,GAAGA,CAAA,KAAI;IACzB;EAAA,CACD;EAED,oBACEvB,OAAA,CAACV,QAAQ;IAAAgC,QAAA,GAENR,eAAe,CAACF,SAAS,CAAC,eAE3BZ,OAAA;MAAKwB,SAAS,EAAC,oBAAoB;MAACC,KAAK,EAAE;QAACC,OAAO,EAAG;MAAO,CAAE;MAAAJ,QAAA,GAAC,GAAC,eAC/DtB,OAAA;QAAK2B,EAAE,EAAC,SAAS;QAAAL,QAAA,gBACftB,OAAA;UAAK2B,EAAE,EAAC,MAAM;UAACC,GAAG,EAAE/B,IAAK;UAACgC,GAAG,EAAC;QAAY;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC/CrB,OAAA;UAAK4B,GAAG,EAAE9B,KAAM;UAAC6B,EAAE,EAAC,UAAU;UAACE,GAAG,EAAC;QAAa;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACzDrB,OAAA;UAAK2B,EAAE,EAAC;QAAc;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEjB;AAAClB,EAAA,CA5CQD,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AA6CjB,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}